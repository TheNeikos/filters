var searchIndex = {};
searchIndex["filters"] = {"doc":"A library for constructing predicates and filters for `Iterator::filter`","items":[[0,"filter","filters","The filter implementation",null,null],[8,"IntoFilter","filters::filter","Trait for converting something into a Filter",null,null],[16,"IntoFilt","","",0,null],[10,"into_filter","","",0,null],[8,"Filter","","The filter trai",null,null],[10,"filter","","The function which is used to filter something",1,null],[11,"not","","Helper to invert a filter.",1,null],[11,"or","","Helper to connect two filters via logical OR",1,null],[11,"or_not","","Helper to connect two filters via logical OR and NOT",1,null],[11,"or3","","Helper to connect three filters via logical OR",1,null],[11,"nor","","Helper to connect two filters via logical NOR",1,null],[11,"xor","","Helper to connect two filters via logical XOR",1,null],[11,"and","","Helper to connect two filters via logical AND",1,null],[11,"and3","","Helper to connect three filters via logical AND",1,null],[11,"and_not","","Helper to connect two filters via logical AND and NOT",1,null],[11,"nand","","Helper to connect two filters via logical NAND",1,null],[0,"ops","filters","",null,null],[0,"and","filters::ops","AND implementation.",null,null],[3,"And","filters::ops::and","",null,null],[11,"clone","","",2,null],[11,"new","","",2,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"and"}}],[11,"filter","","",2,null],[0,"bool","filters::ops","Bool Filter implementation, so we can insert this in filter construction",null,null],[3,"Bool","filters::ops::bool","",null,null],[11,"clone","","",3,null],[11,"new","","",3,{"inputs":[{"name":"bool"}],"output":{"name":"bool"}}],[11,"from","","",3,{"inputs":[{"name":"bool"}],"output":{"name":"bool"}}],[11,"filter","","",3,null],[0,"not","filters::ops","NOT implementation.",null,null],[3,"Not","filters::ops::not","",null,null],[11,"clone","","",4,null],[11,"new","","",4,{"inputs":[{"name":"t"}],"output":{"name":"not"}}],[11,"filter","","",4,null],[0,"or","filters::ops","OR implementation.",null,null],[3,"Or","filters::ops::or","",null,null],[11,"clone","","",5,null],[11,"new","","",5,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"or"}}],[11,"filter","","",5,null],[0,"xor","filters::ops","XOR implementation.",null,null],[3,"XOr","filters::ops::xor","",null,null],[11,"clone","","",6,null],[11,"new","","",6,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"xor"}}],[11,"filter","","",6,null],[14,"impl_operators","filters","Creates operator implementations for a Filter struct\nCurrently only Fn and Filter implementations are handled",null,null]],"paths":[[8,"IntoFilter"],[8,"Filter"],[3,"And"],[3,"Bool"],[3,"Not"],[3,"Or"],[3,"XOr"]]};
initSearch(searchIndex);
